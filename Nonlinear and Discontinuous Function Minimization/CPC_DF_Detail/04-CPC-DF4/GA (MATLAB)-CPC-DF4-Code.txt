format long g;

% Test Function 4
function fval = obj_function(x)
   sqrtbase1 = x(4)-x(5)-47;
   if sqrtbase1 < 0
      fval = 1e100;
      return;
   end

   logbase1 = sin(sqrt(sqrtbase1));
   if logbase1 <= 0
      fval = 1e100;
      return;
   end

   sqrtbase2 = x(5)+x(4)./2+47;
   if sqrtbase2 < 0
      fval = 1e100;
      return;
   end

   sqrtbase3 = x(3)-x(4)-47;
   if sqrtbase3 < 0
      fval = 1e100;
      return;
   end

   logbase2 = sin(sqrt(sqrtbase3));
   if logbase2 <= 0
      fval = 1e100;
      return;
   end

   sqrtbase4 = x(4)+x(3)./2+47;
   if sqrtbase4 < 0
      fval = 1e100;
      return;
   end

   sqrtbase5 = x(2)-x(3)-47;
   if sqrtbase5 < 0
      fval = 1e100;
      return;
   end

   logbase3 = sin(sqrt(sqrtbase5));
   if logbase3 <= 0
      fval = 1e100;
      return;
   end

   sqrtbase6 = x(3)+x(2)./2+47;
   if sqrtbase6 < 0
      fval = 1e100;
      return;
   end

   sqrtbase7 = x(1)-x(2)-47;
   if sqrtbase7 < 0
      fval = 1e100;
      return;
   end

   logbase4 = sin(sqrt(sqrtbase7));
   if logbase4 <= 0
      fval = 1e100;
      return;
   end

   sqrtbase8 = x(2)+x(1)./2+47;
   if sqrtbase8 < 0
      fval = 1e100;
      return;
   end

   fval = -(x(2)+47).*sin(sqrt(sqrtbase8))+log(logbase4).*(-x(1))+(-(x(3)+47).*sin(sqrt(sqrtbase6))+...
log(logbase3).*(-x(2)))+(-(x(4)+47).*sin(sqrt(sqrtbase4))+log(logbase2).*(-x(3)))+(-(x(5)+47).*sin(sqrt(sqrtbase2))+...
log(logbase1).*(-x(4)));
end
lb = [-512,-512,-512,-512,-512];
ub = [512,512,512,512,512];
PopSz = 2000;
ParamNo = 5;



%% GA executive code
numRuns = 20;

% Initialize arrays to store results
results_fval = zeros(numRuns, 1);        % Store objective function values of each run
results_xOpt = zeros(numRuns, ParamNo);  % Store optimized variable values of each run

% Set random seed (ensure different initial populations for each run)
rng('shuffle');

options = optimoptions('ga', 'PopulationSize', PopSz, 'MaxGenerations', 2E3, 'Display', 'Iter');
best = 1E+100;

% Perform multiple GA optimizations
for i = 1:numRuns
    fprintf('Run #%d...\n', i);
    
    % Run GA
    [xOpt, fval] = ga(@obj_function, ParamNo, [], [], [], [], lb, ub, [], [], options);

    % Store results
    results_fval(i) = fval;
    results_xOpt(i, :) = xOpt;
    if best > fval
        best = fval;
        best_xOpt = xOpt;
    end
    % Print current run results
    fprintf('Run %d: Objective Function (Min.): %f\n', i, fval);
    fprintf('Optimized variable values: %s\n', mat2str(xOpt));
end

disp(best);
disp(best_xOpt);

% Output all results
disp('Objective function values of all runs:');
disp(results_fval);

disp('Optimized variable values of all runs:');
disp(results_xOpt);
